version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: iter_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-iter_college_db}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./server/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - iter_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: iter_app
    restart: unless-stopped
    ports:
      - "${PORT:-5000}:5000"
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ${DB_USER:-root}
      DB_PASSWORD: ${DB_PASSWORD:-rootpassword}
      DB_NAME: ${DB_NAME:-iter_college_db}
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
    volumes:
      - ./uploads:/usr/src/app/uploads
      - ./backups:/usr/src/app/backups
      - ./logs:/usr/src/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - iter_network

  nginx:
    image: nginx:alpine
    container_name: iter_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./client:/usr/share/nginx/html
      - ./uploads:/usr/share/nginx/html/uploads
    depends_on:
      - app
    networks:
      - iter_network

volumes:
  mysql_data:

networks:
  iter_network:
    driver: bridge
